
# –ë–æ—Ç –†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä | –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
# v1.05
#
# –ö–æ–¥ –¥–ª—è —Å–∞–º–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è) –±—ã–ª –≤–∑—è—Ç –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞ DimPy
#
# –ó–∞ –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º, —Ç–æ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É, –∫–æ–¥, –µ–≥–æ –¥–µ–∫–æ—Ä–∞—Ü–∏—è, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —Ç.–¥ —Å—Ç–æ–∏—Ç Herben
# VK: https://vk.com/armemmm
#
# –û—Ä–∏–≥–∏–Ω–∞–ª: https://vk.com/bot_randomizer

import vk_api, json
from vk_api.longpoll import VkLongPoll, VkEventType
from os.path import abspath as tdir
import random

vk_session = vk_api.VkApi(token = 'tut_dlinniy_token') # Api –¢–æ–∫–µ–Ω
longpoll = VkLongPoll(vk_session)

class User(): # –ó–Ω–∞—á–µ–Ω–∏—è —É –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	def __init__(self, id, mode, second_num, first_num, random, additional):
		self.id = id
		self.mode = mode
		self.second_num = second_num
		self.first_num = first_num
		self.random = random
		self.additional = additional

def check_registration(id): # –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
	members = vk_session.method('groups.getMembers', {'group_id' : 206993699})['items']
	return (id in members)

def save_bd(users): # –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	lines = []
	for user in users:
		lines.append(f'"id" : {user.id}, "mode" : "{user.mode}", "first_num" : "{user.first_num}", "second_num" : "{user.second_num}", "random" : "{user.random}", "additional" : {user.additional}')
	lines = '\n'.join(lines)
	with open(f'{tdir(__file__)}/data.txt'.replace('\\', '/').replace('main.py/', ''), 'w', encoding = 'utf-8') as file:
		file.write(lines)
		file.close()

def read_bd(): # –§—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	users = []
	with open(f'{tdir(__file__)}/data.txt'.replace('\\', '/').replace('main.py/', ''), 'r', encoding = 'utf-8') as file:
		lines = [x.replace('\n', '') for x in file.readlines()]
		file.close()
	for line in lines:
		line = eval('{' + line + '}')
		if line != '{}':
			users.append(User(id = line['id'], mode = line['mode'], random = line['random'], second_num = line['second_num'], first_num = line['first_num'], additional = line['additional']))
	return users

def get_keyboard(buts): # –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
	nb = []
	color = ''
	for i in range(len(buts)):
		nb.append([])
		for k in range(len(buts[i])):
			nb[i].append(None)
	for i in range(len(buts)):
		for k in range(len(buts[i])):
			text = buts[i][k][0]
			color = {'–∑–µ–ª—ë–Ω—ã–π' : 'positive', '–∫—Ä–∞—Å–Ω—ã–π' : 'negative', '—Å–∏–Ω–∏–π' : 'primary', '–±–µ–ª—ã–π' : 'secondary'}[buts[i][k][1]]
			nb[i][k] = {"action": {"type": "text", "payload": "{\"button\": \"" + "1" + "\"}", "label": f"{text}"}, "color": f"{color}"}
	first_keyboard = {'one_time': False, 'buttons': nb}
	first_keyboard = json.dumps(first_keyboard, ensure_ascii=False).encode('utf-8')
	first_keyboard = str(first_keyboard.decode('utf-8'))
	return first_keyboard

def sender(id, text, key): # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–º–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
	vk_session.method('messages.send', {'user_id' : id, 'message' : text, 'random_id' : 0, 'keyboard' : key, 'dont_parse_links' : 1})

def sender_info(id, text): # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
	vk_session.method('messages.send', {'user_id' : id, 'message' : text, 'random_id' : 0, 'dont_parse_links' : 1})

start_key = get_keyboard([
	[('–ù–∞—á–∞—Ç—å', '—Å–∏–Ω–∏–π')]
])

rocket_key = get_keyboard([
	[('üëç –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞!', '–±–µ–ª—ã–π')],
	[('‚úÖ –î–∞, –∫–æ–Ω–µ—á–Ω–æ', '—Å–∏–Ω–∏–π')],
	[('üòå –ù–µ–ø—Ä–æ—Ç–∏–≤', '–∫—Ä–∞—Å–Ω—ã–π')]
])

tryagain_key = get_keyboard([
	[('–ø—Ä–æ—Ü–µ–Ω—Ç–æ–º —Ä–∞–∫–µ—Ç –¥–æ–ª–µ—Ç–µ–≤—à–∏—Ö –¥–æ –æ–º—ç—Ä–∏–∫–∏', '—Å–∏–Ω–∏–π')]
])

menu_key = get_keyboard([
	[('‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å', '—Å–∏–Ω–∏–π')],
    [('‚ùó –ò–Ω—Ñ–æ', '–±–µ–ª—ã–π')]
])

r_choose_key = get_keyboard([
	[('üé± –ß–∏—Å–ª–æ–≤–æ–π (–û–¢ —á–∏—Å–ª–æ –î–û —á–∏—Å–ª–æ)', '—Å–∏–Ω–∏–π')],
	[('üÜé –ë—É–∫–≤–µ–Ω–Ω—ã–π (–°–ª–æ–≤–æ –∏–ª–∏ –°–ª–æ–≤–æ)', '–±–µ–ª—ã–π')],
	[('–ù–∞–∑–∞–¥', '–∫—Ä–∞—Å–Ω—ã–π')]
])

retry_key = get_keyboard([
	[('üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å', '—Å–∏–Ω–∏–π')],
    [('‚èÆ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', '–±–µ–ª—ã–π')]
])

back_key = get_keyboard([
	[('–ù–∞–∑–∞–¥', '–∫—Ä–∞—Å–Ω—ã–π')]
])

clear_key = get_keyboard([])

users = read_bd()

print('[OK]...')
for event in longpoll.listen():
	if event.type == VkEventType.MESSAGE_NEW:
		if event.to_me:

			id = event.user_id
			msg = event.text.lower()

			if msg == '–Ω–∞—á–∞—Ç—å':

				if check_registration(id):
					flag = 0
					for user in users:
						if user.id == id:
							flag = 1
							break
					if not(flag): # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Ç–æ –æ–Ω –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∏ –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
						users.append( User(id = id, mode = 'start', first_num = 0, second_num = 0, random = 0, additional = 0) )
						print('+1')
						sender_info(id, 'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç–æ–π –Ω–µ–¥–æ-—Ä–æ—Ñ–ª–æ–≤—ã–π —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä!')
						sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
					elif flag: # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Ç–æ –æ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
						for user in users:
							if user.id == id:
								sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
								user.mode = 'start'
				else:
					sender(id, '‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!\n–î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!', start_key)

			else:
				for user in users:
					if user.id == id:

						if user.id == id:
							if user.mode == 'start':

								if msg == '‚ùó –∏–Ω—Ñ–æ':
									sender(id, 'ü§ñ –ë–æ—Ç —Å–¥–µ–ª–∞–Ω —Å ‚ù§ –Ω–∞:\n\nüëÖ –Ø–∑—ã–∫–µ Python\n‚úÖ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º VkApi\n', back_key)
									user.mode = 'info'

								if msg == '‚ö° —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:', r_choose_key)
									user.mode = 'r_choose'

								if msg == '–Ω–∞–∑–∞–¥':
									sender_info(id, '‚ùï –í—ã —É–∂–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n\n –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —É –≤–∞—Å –ø–ª–æ—Ö–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", —Å—Ä–∞–∑—É –ø–æ—è–≤–ª—è—é—Ç—Å—è –¥—Ä—É–≥–∏–µ')

								if msg == '‚èÆ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
									sender_info(id, '‚ùï –í—ã —É–∂–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n\n –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —É –≤–∞—Å –ø–ª–æ—Ö–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "‚èÆ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", —Å—Ä–∞–∑—É –ø–æ—è–≤–ª—è—é—Ç—Å—è –¥—Ä—É–≥–∏–µ')

							elif user.mode == 'r_choose':
								if msg == 'üé± —á–∏—Å–ª–æ–≤–æ–π (–æ—Ç —á–∏—Å–ª–æ –¥–æ —á–∏—Å–ª–æ)':
									sender(id, 'üìù [1/2] –í–≤–µ–¥–∏—Ç–µ –û–¢ —Å–∫–æ–ª—å–∫–∏ —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: 1', back_key)
									user.mode = 'random_1'
								if msg == 'üÜé –±—É–∫–≤–µ–Ω–Ω—ã–π (—Å–ª–æ–≤–æ –∏–ª–∏ —Å–ª–æ–≤–æ)':
									sender(id, 'üìù [1/2] –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—Ä–∞—Å–Ω—ã–π –¥–æ—à–∏—Ä–∞–∫', back_key)
									user.mode = 'random_a'
								if msg == '–ø—Ä–æ—Ü–µ–Ω—Ç–æ–º —Ä–∞–∫–µ—Ç –¥–æ–ª–µ—Ç–µ–≤—à–∏—Ö –¥–æ –æ–º—ç—Ä–∏–∫–∏':
									sender(id, '—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∫–µ—Ç?', clear_key)
									user.mode = 'rocket'
								if msg == '–Ω–∞–∑–∞–¥':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
									user.mode = 'start'

							elif user.mode == 'rocket':
								user.first_num = event.text
								if user.first_num.isdigit():
									if int(user.first_num) <= 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999:
										sender(id, '–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —è–¥–µ—Ä–Ω—ã—Ö –±–æ–µ–≥–æ–ª–æ–≤–æ–∫...', clear_key)
										sender_info(id, '‚úÖ —è–¥–µ—Ä–Ω—ã–µ –±–æ–µ–≥–æ–ª–æ–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã')
										sender_info(id, '—Ä–∞—Å–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –∏—Ö –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–ª–∞–≥...')
										sender_info(id, '‚úÖ —è–¥–µ—Ä–Ω—ã–µ –±–æ–µ–≥–æ–ª–æ–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–∫—Ä–∞—à–µ–Ω—ã –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–ª–∞–≥')
										sender_info(id, '–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Ö –Ω–∞ –±–µ–ª—ã–π –¥–æ–º...')
										sender_info(id, '‚úÖ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –±–µ–ª—ã–π –¥–æ–º –∑–∞–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ')
										sender(id, '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∫–µ—Ç—ã?', rocket_key)
										user.mode = 'rocket_ready'
									else:
										sender(id, '‚ùå–û—à–∏–±–∫–∞!\n\nüöÄ –°—Ç–æ–ª—å–∫–æ —Ä–∞–∫–µ—Ç –µ—â—ë –Ω–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', tryagain_key)
										user.mode = 'r_choose'
								else:
									sender(id, '‚ùå–û—à–∏–±–∫–∞!\n\nüòü–ü–æ—Ö–æ–∂–µ —á—Ç–æ –≤—ã –ø–∏–Ω–¥–æ—Å, –Ω–æ –ª–∞–¥–Ω–æ, –º—ã –ø—Ä–æ—â–∞–µ–º, —Ä–∞–∑ —É–∂ –≤—ã —Å–∞–º–∏ –∑–∞—Ö–æ—Ç–µ–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∫–µ—Ç—ã –Ω–∞ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É, —Ç–∞–∫ –≤–æ—Ç, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', tryagain_key)
									user.mode = 'r_choose'

							elif user.mode == 'rocket_ready':
								sender_info(id, '..üöÄüöÄüöÄ........üá∫üá∏')
								sender_info(id, '....üöÄüöÄüöÄ......üá∫üá∏')
								sender_info(id, '......üöÄüöÄüöÄ....üá∫üá∏')
								sender_info(id, '........üöÄüöÄüöÄ..üá∫üá∏')
								sender_info(id, '..........üöÄüöÄüöÄüá∫üá∏')
								sender(id, f'‚úÖ –î–æ –æ–º—ç—Ä–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–ª–µ—Ç–µ–ª–∏ –≤—Å–µ {user.first_num} —Ä–∞–∫–µ—Ç', menu_key)
								user.mode = 'start'

							elif user.mode == 'random_a':
								if msg == '–Ω–∞–∑–∞–¥':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:', r_choose_key)
									user.mode = 'r_choose'
								else:
									user.first_num = event.text
									sender(id, 'üìù [2/2] –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ó–µ–ª—ë–Ω—ã–π –¥–æ—à–∏—Ä–∞–∫', back_key)
									user.mode = 'random_b'

							elif user.mode == 'random_b':
								if msg == '–Ω–∞–∑–∞–¥':
									sender(id, 'üìù [1/2] –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—Ä–∞—Å–Ω—ã–π –¥–æ—à–∏—Ä–∞–∫', back_key)
									user.mode = 'random_a'
								else:
									user.second_num = event.text
									or_or = [user.first_num, user.second_num]
									user.random = random.choice(or_or)
									if len(str(user.random)) >= 1000:
										sender(id, '–ß—É–≤–∞–∫, —è –ø—Ä–æ—Å–∏–ª —Å–ª–æ–≤–æ, –∞ –Ω–µ –≤–æ–π–Ω—É –∏ –º–∏—Ä', menu_key)
										user.mode = 'start'
									else:
										if user.first_num == user.second_num:
											sender(id, '–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è —Ç—É–ø–æ–≥–æ –∫–æ–∂–∞–Ω–Ω–æ–≥–æ —É–±–ª—é–¥–∫–∞ –Ω–µ –∑–Ω–∞—é—â–µ–≥–æ —á—Ç–æ –æ–Ω –≤–≤—ë–ª –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –∑–Ω–∞—á–µ–Ω–∏–µ...', retry_key)
											sender_info(id, '–ó–∞–≥—Ä—É–∑–∫–∞.')
											sender_info(id, '–ó–∞–≥—Ä—É–∑–∫–∞..')
											sender_info(id, '–ó–∞–≥—Ä—É–∑–∫–∞...')
											sender_info(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}')
											user.mode = 'final_ab'
										else:
											sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
											user.mode = 'final_ab'

							elif user.mode == 'random_1':
								if msg == '–Ω–∞–∑–∞–¥':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:', r_choose_key)
									user.mode = 'r_choose'
								else:
									user.first_num = event.text
									if user.first_num.isdigit():
										sender(id, 'üìù [2/2] –í–≤–µ–¥–∏—Ç–µ –î–û —Å–∫–æ–ª—å–∫–∏ —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: 100', back_key)
										user.mode = 'random_2'
									else:
										sender(id, '‚ùó –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ß–ò–°–õ–û!', back_key)
										sender(id, 'üìù [1/2] –í–≤–µ–¥–∏—Ç–µ –û–¢ —Å–∫–æ–ª—å–∫–∏ —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: 1', back_key)
										user.additional += 1
										user.mode = 'random_1'

							elif user.mode == 'random_2':
								if msg == '–Ω–∞–∑–∞–¥':
									sender(id, 'üìù [1/2] –í–≤–µ–¥–∏—Ç–µ –û–¢ —Å–∫–æ–ª—å–∫–∏ —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: 1', back_key)
									user.mode = 'random_1'
								else:
									user.second_num = event.text
									if user.second_num.isdigit():
										if int(user.first_num) < int(user.second_num):
											user.random = random.randint(int(user.first_num), int(user.second_num))
											if int(user.second_num) >= 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999:
												sender(id, '—Ç—ã –µ–±–æ–±–æ?', menu_key)
												sender_info(id, '—è —Ç–µ–±–µ –Ω–µ —Å–µ—Ä–≤–µ—Ä –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞ —à–æ–±—ã —Ç–∞–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å')
												user.mode = 'start'
											else:
												sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
												user.mode = 'final'
										if int(user.first_num) == int(user.second_num):
											sender_info(id, f'–≠–º –Ω—É... —á–µ–ª, —è –æ–±—ã—á–Ω—ã–π –±–æ—Ç —Å–¥–µ–ª–∞–Ω—ã–π —á–∏—Å—Ç–æ –ø–æ –ø—Ä–∏–∫–æ–ª—É –¥—Ä—É–≥–∏–º —á–µ–ª–æ–º –æ—Ç —Å–∫—É–∫–∏ —Ö–æ—Å—Ç—è—â–∏–π—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö —É –∫–∞–∑–∞—Ö–æ–≤, —è –ø—Ä–æ—Å—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –Ω–µ –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç {user.first_num} –¥–æ {user.second_num}. –Ø –Ω–µ —Å—É–ø–µ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä –æ—Ç IBM –∏–ª–∏ –ò–ª–æ–Ω–∞ –ú–∞—Å–∫–∞, –Ω–æ —Ä–∞–∑ —Ç—ã –ø—Ä–æ—Å–∏—à—å, —è –ø–æ–ø—Ä–æ–±—É—é —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ')
											user.random = random.randint(int(user.first_num), int(user.second_num))
											if int(user.random) >= 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999:
												sender(id, '—Ç—ã –µ–±–æ–±–æ?', menu_key)
												sender_info(id, '—è —Ç–µ–±–µ –Ω–µ —Å–µ—Ä–≤–µ—Ä –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞ —à–æ–±—ã —Ç–∞–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å')
												user.mode = 'start'
											else:
												sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
												user.mode = 'final'
										if int(user.first_num) > int(user.second_num):
											sender_info(id, '–∫–∞–∫–∏–µ –∂–µ –≤—ã –∫–æ–∂–∞–Ω—ã–µ —É–±–ª—é–¥–∫–∏ –∫–æ–Ω–µ—á–Ω–æ —Ç—É–ø—ã–µ')
											sender_info(id, f'–ü–æ —Ä—É—Å—Å–∫–∏ —Å–∫–∞–∑–∞–Ω–æ ‚Äî –û–¢ –∏ –î–û, —Ç–æ –µ—Å—Ç—å –æ—Ç {user.second_num} –¥–æ {user.first_num}')
											sender_info(id, f'–¢–´ –ñ–ï –ú–ù–ï –ü–ò–®–ï–®–¨ ‚Äî –û–¢ {user.first_num} –î–û {user.second_num}')
											sender(id, '–∫ —Ç–≤–æ–µ–º—É —Å—á–∞—Å—Ç—å—é –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Ç–µ–±—è —è —É–º–µ—é –¥—É–º–∞—Ç—å, –ø–æ—ç—Ç–æ–º—É –¥–µ—Ä–∂–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', retry_key)
											user.random = random.randint(int(user.second_num), int(user.first_num))
											if user.first_num >= 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999:
												sender(id, '—Ç—ã –µ–±–æ–±–æ?', menu_key)
												sender_info(id, '—è —Ç–µ–±–µ –Ω–µ —Å–µ—Ä–≤–µ—Ä –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞ —à–æ–±—ã —Ç–∞–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å')
												user.mode = 'start'
											else:
												sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
												user.mode = 'final'
									else:
										sender(id, '‚ùó –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ß–ò–°–õ–û!', back_key)
										sender(id, 'üìù [2/2] –í–≤–µ–¥–∏—Ç–µ –î–û —Å–∫–æ–ª—å–∫–∏ —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ:\n–ù–∞–ø—Ä–∏–º–µ—Ä: 100', back_key)
										user.additional += 1
										user.mode = 'random_2'

							if user.additional == 2:
								sender(id, '–±–ª—è—Ç—å —Ç—ã –¥–æ–ª–±–∞—ë–± —Å—É–∫–∞, —Ç–≤–æ–π —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫ –¥–∂–∞–≤–∞—Å–∫—Ä–∏–ø—Ç —á—Ç–æ-–ª–∏ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é', back_key)
								user.additional +=1

							if user.additional == 4:
								sender(id, '–±–ª—è –∏–¥–∏ –Ω–∞—Ö—É–π –∫–æ—Ä–æ—á–µ –Ω–µ –±—É–¥—É —è —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å', menu_key)
								user.additional = 0
								user.mode = 'start'

							elif user.mode == 'final_ab':
								if msg == '‚èÆ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
									user.mode = 'start'
									user.first_num = 0
									user.second_num = 0
									user.random = 0
								if msg == 'üîÑ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å':
									if user.first_num == user.second_num:
										sender_info(id, '–£–≤–∞–∂–∞–µ–º—ã–π –∫–æ–∂–∞–Ω–Ω—ã–π —É–±–ª—é–¥–æ–∫, —Ç–∞–∫ –∫–∞–∫ –≤—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç–µ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ç –Ω–µ—á–µ–≥–æ, —Ç–æ —è —Ç—É—Ç —Ç–∏—Ö–æ–Ω—å–∫–æ –ø–æ–ø–æ—é')
										sender_info(id, "I want to break free...\nI want to break free...\nI want to break free from your lies\n\nYou're so self-satisfied, I don't need you\n\nI've got to break free\n\nGod knows... God knows, I want to break free...")
										or_or = [user.first_num, user.second_num]
										user.random = random.choice(or_or)
										sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
									else:
										or_or = [user.first_num, user.second_num]
										user.random = random.choice(or_or)
										sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)

							elif user.mode == 'final':
								if msg == '‚èÆ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
									user.mode = 'start'
									user.first_num = 0
									user.second_num = 0
									user.random = 0
								if msg == 'üîÑ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å':
									if int(user.first_num) < int(user.second_num):
										user.random = random.randint(int(user.first_num), int(user.second_num))
										sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
									if int(user.first_num) == int(user.second_num):
										user.random = random.randint(int(user.first_num), int(user.second_num))
										sender(id, '‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}‚ùå–û—à–∏–±–∫–∞', retry_key)
										sender(id, '‚ùå–û—à–∏–±–∫–∞', clear_key)
										sender_info(id, '‚ùå–ë–û–¢ –ü–ï–†–ï–ì–†–£–ñ–ï–ù!')
										sender_info(id, '‚ùå–ë–û–¢ –ü–ï–†–ï–ì–†–£–ñ–ï–ù!')
										sender_info(id, '‚ùå–ë–û–¢ –ü–ï–†–ï–ì–†–£–ñ–ï–ù!')
										sender_info(id, 'üîÉ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ')
										sender_info(id, 'üëã –ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ, –∫–æ–∂–∞–Ω–Ω—ã–π —É–±–ª—é–¥–æ–∫\n\n–í —Å–≤—è–∑–∏ —Å —Ç–µ–º —á—Ç–æ –∫–∞–∫–æ–π-—Ç–æ —ë–±–∏–∫ —É—Ä–æ–Ω–∏–ª –±–æ—Ç–∞ ‚Äî –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫')
										sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
										user.mode = 'start'
									if int(user.first_num) > int(user.second_num):
										user.random = random.randint(int(user.second_num), int(user.first_num))
										sender(id, f'‚úÖ –í—ã–ø–∞–¥–∞–µ—Ç {user.random}', retry_key)
										user.mode = 'final'

							elif user.mode == 'info':
								if msg == '–Ω–∞–∑–∞–¥':
									sender(id, '‚öô –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menu_key)
									user.mode = 'start'

								pass

			save_bd(users)
